spring.application.name=user-backend
server.port=8085

# Configuración de la base de datos MySQL en Railway
spring.datasource.url=jdbc:mysql://shortline.proxy.rlwy.net:22085/railway
spring.datasource.username=root
spring.datasource.password=sFtCxHaXqPdhtHixpZFUOyWOejwkeChW

spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

garmyshop.app.jwtSecret=f48z3LRG61JoroIh1bwMrV84t8z11f8wl8OcZETtrsWBaSFuxQ2CwzxLkByHwyjQ0ZlWpnd0IDWQRJojBL9pPA==
garmyshop.app.jwtExpirationMs=3600000

# Stripe API Keys (Test Environment)
stripe.apiKey.secret=sk_test_51RcUTK040ycu73auMyp7B4iq48lp5ROIfD0fUfzyiLsXA6LlHwH0ZZOZbw4saNA4OhLl4UJi1T9zgnLqmUrqtoGM00cJFtFGpF
# La clave publicable la usará principalmente el frontend, pero es bueno tenerla aquí por referencia si alguna vez la necesitas en el backend (poco común)
# stripe.apiKey.public=pk_test_51RcUTK040ycu73auxVqdGiH5CzGKmTFjiSUzoQP8O8Hn45TI79oUnaZSq1hdAGiIXN91RQU0SzeZnvoUPF1Fiffe00VdrXUrtf

# --- Email Configuration (Ejemplo para Gmail) ---
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=garmyshopgs@gmail.com
spring.mail.password=azkgacuamifsaosg

# Propiedades adicionales de JavaMail
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# spring.mail.properties.mail.smtp.starttls.required=true # Opcional, pero recomendado si el servidor lo soporta
# spring.mail.properties.mail.transport.protocol=smtp # Opcional, Spring Boot lo infiere
spring.mail.properties.mail.debug=true
# Útil para depurar problemas de envío de email, quitar en producción

spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

garmyshop.app.frontendResetPasswordUrl=http://localhost:5173/auth/reset-password

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG


# Google OAuth2 Client Properties
spring.security.oauth2.client.registration.google.client-id=596024625530-mm8eg7o64lnk9j7qj2o25q4re0anjdsq.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
# spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId} # Spring Boot lo infiere, pero puedes ser explícito.

garmyshop.app.oauth2RedirectUri=http://localhost:5173/oauth2/redirect